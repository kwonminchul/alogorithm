/*
   
    문자열 정렬

    문자열로 구성된 리스트 strings와, 정수 n이 주어졌을 때, 각 문자열의 인덱스 n번째 글자를 기준으로 오름차순 정렬하여 리턴해야 합니다.
    예를 들어 strings가 ["sun", "bed", "car"]이고 n이 1이면 각 단어의 인덱스 1의 문자 "u", "e", "a"로 strings를 정렬합니다.

    - strings는 길이 1 이상, 50이하인 배열입니다.
    - strings의 원소는 소문자 알파벳으로 이루어져 있습니다.
    - strings의 원소는 길이 1 이상, 100이하인 문자열입니다.
    - 모든 strings의 원소의 길이는 n보다 큽니다.
    - 인덱스 1의 문자가 같은 문자열이 여럿 일 경우, 사전순으로 앞선 문자열이 앞쪽에 위치합니다.
    - string에 활용할 수 있는 많은 메서드가 있습니다. mdn에서 참고하여 문제를 풀어보세요.

    입출력 예시
    ---------------------------------------------------------
    strings                    n     return
    ---------------------------------------------------------
    ["sun", "bed", "car"]      1    ["car", "bed", "sun"]
    ["abce", "abcd", "cdx"]    2    ["abcd", "abce", "cdx"]
    

*/

function stringSort(arr, n) {
  return arr.sort((a, b) =>
    a[n] === b[n] ? a.localeCompare(b) : a[n].localeCompare(b[n])
  );

  //   localeCompare()메서드는 참조 문자열이 정렬 순서에서 주어진 문자열과 앞인지 뒤인지 또는 같은지 나타내는 숫자를 반환합니다.
}
